name: Quality Check
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  catalog-check:
    name: "Catalog Updates Check"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # 4.2.2
        with:
          dependency-graph: "generate-and-submit"
          dependency-graph-continue-on-failure: false
          gradle-home-cache-cleanup: true

      - name: Run Dependency Updates
        run: |
          ./gradlew --quiet --console=plain dependencyUpdates

  style-check:
    name: "Style Check"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # 4.2.2
        with:
          gradle-home-cache-cleanup: true

      - name: Run Linter
        run: |
          ./gradlew --quiet --console=plain ktlintCheck

      - name: Push Checkstyle report
        uses: jwgmeligmeyling/checkstyle-github-action@50292990e18466f2c5d95d04ff5fab931254fa5f # 1.2.0
        if: success() || failure() # always run even if the previous step fails
        with:
          path: "**/*Check.xml"

  unit-tests:
    name: "Unit and Integration Tests"
    runs-on: ubuntu-latest
    needs:
      - catalog-check
      - style-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # 4.2.2
        with:
          gradle-home-cache-cleanup: true

      - name: Setup Docker (for Test Containers)
        run: |
          echo "Adding Docker official GPG key"
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          echo "Adding the repository to APT sources"
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update

          echo "Installing docker"
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

      - name: Run Unit and Integration Tests
        run: |
          export DISPLAY=:99.0
          Xvfb -ac :99 -screen 0 1920x1080x24 &
          sleep 10
          ./gradlew --stacktrace --console=plain clean check

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@a427a90771729d8f85b6ab0cdaa1a5929cab985d # 5.0.0
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: "**/build/test-results/test/TEST-*.xml"

      - uses: madrapps/jacoco-report@7c362aca34caf958e7b1c03464bd8781db9f8da7 # 1.7.1
        if: success() || failure() # always run even if the previous step fails
        with:
          paths: "**/testCodeCoverageReport.xml"
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 70
          title: "Coverage Report"
          update-comment: true
          continue-on-error: true
          pass-emoji: "âœ…"
          fail-emoji: "ðŸš«"

  fitness-check:
    name: "Fitness Check"
    runs-on: ubuntu-latest
    needs:
      - catalog-check
      - style-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # 4.2.2
        with:
          gradle-home-cache-cleanup: true

      - name: Performance Tests
        run: |
          ./gradlew --quiet --console=plain ":packages:jetbrains-plugin:jmh"

      - name: JMH Benchmark Action
        uses: kitlangton/jmh-benchmark-action@e7255850c5248fe630d7b5ca4ec4f3671765a9c7 # 0.1.1
        with:
          jmh-output-path: build/reports/jmh/results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          fail-on-regression: true
          # the typo is on purpose, it's like this in the plugin
          failue-threshold: -5

  qodana-check:
    name: "Qodana Static Analysis"
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - fitness-check
    steps:
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          large-packages: false

      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Qodana - Code Inspection
        uses: JetBrains/qodana-action@v2024.2
        with:
          cache-default-branch-only: true

  verify-plugin:
    name: "Verify Plugin"
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - fitness-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # 4.2.2
        with:
          gradle-home-cache-cleanup: true

      - name: Verify Plugin
        run: |
          ./gradlew ":packages:jetbrains-plugin:verifyPlugin"
