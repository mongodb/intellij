name: Publish Release

env:
  ORG_GRADLE_CACHING: false
  ORG_GRADLE_PARALLEL: false
  ORG_GRADLE_DAEMON: false

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  prepare-release:
    name: "Prepare Release"
    runs-on: ubuntu-latest
    steps:
      - uses: mongodb-js/devtools-shared/actions/setup-bot-token@main
        id: app-token
        with:
          app-id: ${{ vars.DEVTOOLS_BOT_APP_ID }}
          private-key: ${{ secrets.DEVTOOLS_BOT_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"

      - uses: robinraju/release-downloader@a96f54c1b5f5e09e47d9504526e96febd949d4c2 # 1.11
        with:
          tag: ${{ github.ref_name }}
          fileName: "jetbrains-plugin.zip"
          out-file-path: "packages/jetbrains-plugin/build/distributions/"

      - name: Publish Plugin In General Availability
        shell: bash
        id: publish
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          BUILD_SEGMENT_API_KEY: ${{ secrets.BUILD_SEGMENT_API_KEY }}
          JB_PUBLISH_CHANNEL: "ga"
          JB_PUBLISH_TOKEN: ${{ secrets.JB_PUBLISH_TOKEN }}
          JB_CERTIFICATE_CHAIN: ${{ secrets.JB_CERTIFICATE_CHAIN }}
          JB_PRIVATE_KEY: ${{ secrets.JB_PRIVATE_KEY }}
          JB_PRIVATE_KEY_PASSWORD: ${{ secrets.JB_PRIVATE_KEY_PASSWORD }}
        run: |
          set -e

          ./gradlew ":packages:jetbrains-plugin:publishPlugin" $(./gradlew ":packages:jetbrains-plugin:publishPlugin" --dry-run | awk '/^:/ { print "-x" $1 }' | sed '$ d')

          git checkout main
          git merge ${{ github.ref_name }}
          git push origin main
          
          VERSION=$(./gradlew getVersion --quiet --console=plain)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"

      - name: "Notify Release"
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # 2.1.0
        with:
          payload: |
            { "text": "Released version ${{ steps.publish.outputs.version }} in GA." }
          webhook: ${{ secrets.INTELLIJ_DEVEL_WEBHOOK_URL }}
          webhook-type: incoming-webhook
