name: "Metadata Verification"

env:
  ORG_GRADLE_CACHING: false
  ORG_GRADLE_PARALLEL: false
  ORG_GRADLE_DAEMON: false
  BUILD_SEGMENT_API_KEY: ""

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  check-pr-title:
    name: "Pull Request Title Check"
    runs-on: ubuntu-latest
    steps:
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # 1.3.1
        with:
          tool-cache: false
          large-packages: false

      - name: Enforce conventional commit style
        uses: realm/ci-actions/title-checker@d6cc8f067474759d38e6d24e272027b4c88bc0a9
        with:
          regex: '^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|ops){1}(\([\w\-\.]+\))?(!)?: .*'
          error-hint: 'Invalid PR title. Make sure it follows the conventional commit specification (i.e. "<type>(<optional scope>): <description>") or add the no-title-validation label'
          ignore-labels: no-title-validation
      - name: Enforce JIRA ticket in title
        uses: realm/ci-actions/title-checker@d6cc8f067474759d38e6d24e272027b4c88bc0a9
        # Skip the JIRA ticket check for PRs opened by bots
        if: ${{ !contains(github.event.pull_request.user.login, '[bot]') }}
        with:
          regex: "[A-Z]{4,10}-[0-9]{1,5}$"
          error-hint: Invalid PR title. Make sure it ends with a JIRA ticket - i.e. VSCODE-1234 or add the no-title-validation label
          ignore-labels: no-title-validation

  spec-check:
    name: "MQL Specification Check"
    runs-on: ubuntu-latest
    steps:
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # 1.3.1
        with:
          tool-cache: false
          large-packages: false

      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch Main
        run: |
          git fetch origin main --depth 1

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v.4.4.0
        

      - name: Check if PR has "skip-spec-check" label
        id: check-label
        if: github.event_name == 'pull_request'  # Only check labels in PRs
        run: |
          if gh pr view ${{ github.event.pull_request.number }} --json labels --repo ${{ github.repository }} | jq -e '.labels | any(.name == "skip-spec-check")' > /dev/null; then
            echo "SKIP=true" >> $GITHUB_ENV
          else
            echo "SKIP=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Spec Update Check
        if: github.ref != 'refs/heads/main' && env.SKIP != 'true'
        run: |
          ./gradlew --quiet --console=plain checkSpecUpdates

  catalog-check:
    name: "Catalog Updates Check"
    runs-on: ubuntu-latest
    steps:
      - name: Maximize Build Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # 1.3.1
        with:
          tool-cache: false
          large-packages: false

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@8379f6a1328ee0e06e2bb424dadb7b159856a326 # v.4.4.0
        with:
          dependency-graph: "generate-and-submit"
          dependency-graph-continue-on-failure: false

      - name: Run Dependency Updates
        run: |
          ./gradlew --quiet --console=plain dependencyUpdates
